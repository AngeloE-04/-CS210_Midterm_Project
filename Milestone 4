#include <iostream>
#include <vector>
#include <string>
#include <fstream>
#include <sstream>
using namespace std;

struct School {
    string name;
    string address;
    string city;
    string state;
    string county;
    School* next;

    School(string n, string a, string c, string s, string co)
        : name(n), address(a), city(c), state(s), county(co), next(nullptr) {}
};

class SchoolHashTable {
private:
    vector<School*> table;
    int tableSize;

    int hashFunction(string key) {
        unsigned long hash = 0;
        for (char ch : key) {
            hash = (hash * 31 + ch) % tableSize;
        }
        return hash % tableSize;
    }

public:
    SchoolHashTable(int size) : tableSize(size) {
        table.resize(tableSize, nullptr);
    }
void insert(string name, string address, string city, string state, string county) {
        int index = hashFunction(name);
        School* newSchool = new School(name, address, city, state, county);
        newSchool->next = table[index];
        table[index] = newSchool;
    }

    void deleteByName(string name) {
        int index = hashFunction(name);
        School* curr = table[index];
        School* prev = nullptr;

        while (curr != nullptr) {
            if (curr->name == name) {
                if (prev == nullptr) {
                    table[index] = curr->next;
                } else {
                    prev->next = curr->next;
                }
                delete curr;
                cout << "Deleted school: " << name << endl;
                return;
            }
            prev = curr;
            curr = curr->next;
        }
        cout << "School not found: " << name << endl;
    }
